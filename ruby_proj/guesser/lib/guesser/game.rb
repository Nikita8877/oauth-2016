module Guesser
  class Game
    attr_reader :output
    attr_accessor :winner, :players

    def initialize(output)
      @output, @players = output, []
    end

    def start!
      welcome
      initialize_players
      play
    end

    private

    def play
      until winner do
        players.each do |player|
          sleep 1
          output.puts "\n=== It's now #{player.name}'s turn."
          generate_secret_number_for player
          #   player.waiting_times << measure_time do
          #     output.puts "Enter your guess:"
          #     if player.guessed?
          #       output.puts "You've guessed!"
          #       player.guessed!
          #     else
          #       output.puts("Wrong! Try again next end turn!")
          #     end
          #   end
          #
          #   if player.won?(self)
          #     self.winner = player
          #     break
          #   end
          # end
          #
          # show_players_statistics
        end
      end
      puts winner
    end

    def generate_secret_number_for(player)
      unless player.number_to_guess
        output.puts "Preparing a number to guess..."
        player.generate_number_to_guess!(5)
      end
    end

    def welcome
      output.puts '*' * 50
      output.puts 'Starting the Guesser game!'
      #output.puts "Rules:\nPlayers take turns to guess a number (from 0 to #{options.limit - 1} generated by computer."
      #output.puts "After player guesses a number, a new one will be generated. The first one to guess #{options.points} numbers will become a winner. Have fun!"
      output.puts '*' * 50
    end

    def initialize_players
      output.puts "Starting the game with #{2} player(s)..."

      2.times do |i|
        output.puts "Enter a name for player ##{i + 1}"
        players << Player.new($stdin.gets.strip)
      end
    end
  end
end